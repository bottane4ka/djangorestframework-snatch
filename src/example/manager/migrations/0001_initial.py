# Generated by Django 3.2.4 on 2021-06-04 12:19

import datetime
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="BaseTaskModel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        blank=True,
                        db_column="s_id",
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="Идентификатор",
                    ),
                ),
                (
                    "name",
                    models.TextField(db_column="name", verbose_name="Наименование"),
                ),
            ],
            options={
                "verbose_name": "Базовая задача",
                "verbose_name_plural": "Базовые задачи",
                "db_table": 'manager"."base_task',
            },
        ),
        migrations.CreateModel(
            name="TaskModel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        blank=True,
                        db_column="s_id",
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="Идентификатор",
                    ),
                ),
                (
                    "name",
                    models.TextField(db_column="name", verbose_name="Наименование"),
                ),
            ],
            options={
                "verbose_name": "Задача",
                "verbose_name_plural": "Задачи",
                "db_table": 'manager"."task',
            },
        ),
        migrations.CreateModel(
            name="TaskStatusModel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        blank=True,
                        db_column="s_id",
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="Идентификатор",
                    ),
                ),
                (
                    "name",
                    models.TextField(db_column="name", verbose_name="Наименование"),
                ),
                (
                    "system_name",
                    models.TextField(
                        db_column="system_name", verbose_name="Системное наименование"
                    ),
                ),
            ],
            options={
                "verbose_name": "Статус выполнения задачи",
                "verbose_name_plural": "Статусы выполнения задачи",
                "db_table": 'manager"."task_status',
            },
        ),
        migrations.CreateModel(
            name="TaskSequenceModel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        blank=True,
                        db_column="s_id",
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="Идентификатор",
                    ),
                ),
                (
                    "number",
                    models.IntegerField(
                        blank=True,
                        db_column="number",
                        default=1,
                        verbose_name="Порядковый номер",
                    ),
                ),
                (
                    "base_task",
                    models.ForeignKey(
                        db_column="base_task_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="task_sequence_list",
                        to="manager.basetaskmodel",
                        verbose_name="Базовая задача",
                    ),
                ),
                (
                    "task",
                    models.ForeignKey(
                        db_column="task_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="task_sequence_list",
                        to="manager.taskmodel",
                        verbose_name="Задача",
                    ),
                ),
            ],
            options={
                "verbose_name": "Последовательность задач",
                "verbose_name_plural": "Последовательности задач",
                "db_table": 'manager"."task_sequence',
            },
        ),
        migrations.CreateModel(
            name="BaseTaskLogModel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        blank=True,
                        db_column="s_id",
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="Идентификатор",
                    ),
                ),
                (
                    "add_task_date",
                    models.DateTimeField(
                        blank=True,
                        db_column="add_task_date",
                        default=datetime.datetime.now,
                        verbose_name="Дата постановки базовой задачи",
                    ),
                ),
                (
                    "exec_task_date",
                    models.DateTimeField(
                        blank=True,
                        db_column="exec_task_date",
                        null=True,
                        verbose_name="Дата начала выполнения задачи",
                    ),
                ),
                (
                    "end_task_date",
                    models.DateTimeField(
                        blank=True,
                        db_column="end_task_date",
                        null=True,
                        verbose_name="Дата окончания выполнения задачи",
                    ),
                ),
                (
                    "base_task",
                    models.ForeignKey(
                        db_column="base_task_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="main_task_log_list",
                        to="manager.basetaskmodel",
                        verbose_name="Базовая задача",
                    ),
                ),
                (
                    "status",
                    models.ForeignKey(
                        blank=True,
                        db_column="status_id",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="main_task_log_list",
                        to="manager.taskstatusmodel",
                        verbose_name="Статус выполнения задачи",
                    ),
                ),
            ],
            options={
                "verbose_name": "Аудит выполнения базовой задачи",
                "verbose_name_plural": "Аудит выполнения базовых задач",
                "db_table": 'manager"."base_task_log',
            },
        ),
        migrations.CreateModel(
            name="ActionModel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        blank=True,
                        db_column="s_id",
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="Идентификатор",
                    ),
                ),
                (
                    "name",
                    models.TextField(db_column="name", verbose_name="Наименование"),
                ),
                (
                    "number",
                    models.IntegerField(
                        blank=True,
                        db_column="number",
                        default=1,
                        verbose_name="Порядковый номер",
                    ),
                ),
                (
                    "task",
                    models.ForeignKey(
                        db_column="task_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="action_list",
                        to="manager.taskmodel",
                        verbose_name="Задача",
                    ),
                ),
            ],
            options={
                "verbose_name": "Действие",
                "verbose_name_plural": "Действия",
                "db_table": 'manager"."action',
            },
        ),
    ]
